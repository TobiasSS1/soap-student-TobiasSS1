//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFStudenterConsumer.StudenterReferance {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Student", Namespace="http://schemas.datacontract.org/2004/07/WCFStudent")]
    [System.SerializableAttribute()]
    public partial class Student : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EfternavnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NavnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Alder {
            get {
                return this.AlderField;
            }
            set {
                if ((this.AlderField.Equals(value) != true)) {
                    this.AlderField = value;
                    this.RaisePropertyChanged("Alder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Efternavn {
            get {
                return this.EfternavnField;
            }
            set {
                if ((object.ReferenceEquals(this.EfternavnField, value) != true)) {
                    this.EfternavnField = value;
                    this.RaisePropertyChanged("Efternavn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Navn {
            get {
                return this.NavnField;
            }
            set {
                if ((object.ReferenceEquals(this.NavnField, value) != true)) {
                    this.NavnField = value;
                    this.RaisePropertyChanged("Navn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WCFStudent")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StudenterReferance.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Addstudent", ReplyAction="http://tempuri.org/IService1/AddstudentResponse")]
        string Addstudent(int id, string navn, string efternavn, int alder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Addstudent", ReplyAction="http://tempuri.org/IService1/AddstudentResponse")]
        System.Threading.Tasks.Task<string> AddstudentAsync(int id, string navn, string efternavn, int alder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindStudent", ReplyAction="http://tempuri.org/IService1/FindStudentResponse")]
        WCFStudenterConsumer.StudenterReferance.Student FindStudent(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindStudent", ReplyAction="http://tempuri.org/IService1/FindStudentResponse")]
        System.Threading.Tasks.Task<WCFStudenterConsumer.StudenterReferance.Student> FindStudentAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveStudent", ReplyAction="http://tempuri.org/IService1/RemoveStudentResponse")]
        void RemoveStudent(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveStudent", ReplyAction="http://tempuri.org/IService1/RemoveStudentResponse")]
        System.Threading.Tasks.Task RemoveStudentAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditStudent", ReplyAction="http://tempuri.org/IService1/EditStudentResponse")]
        string EditStudent(int id, string navn, string efternavn, int alder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditStudent", ReplyAction="http://tempuri.org/IService1/EditStudentResponse")]
        System.Threading.Tasks.Task<string> EditStudentAsync(int id, string navn, string efternavn, int alder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllStudent", ReplyAction="http://tempuri.org/IService1/GetAllStudentResponse")]
        WCFStudenterConsumer.StudenterReferance.Student[] GetAllStudent();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllStudent", ReplyAction="http://tempuri.org/IService1/GetAllStudentResponse")]
        System.Threading.Tasks.Task<WCFStudenterConsumer.StudenterReferance.Student[]> GetAllStudentAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        WCFStudenterConsumer.StudenterReferance.CompositeType GetDataUsingDataContract(WCFStudenterConsumer.StudenterReferance.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<WCFStudenterConsumer.StudenterReferance.CompositeType> GetDataUsingDataContractAsync(WCFStudenterConsumer.StudenterReferance.CompositeType composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WCFStudenterConsumer.StudenterReferance.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WCFStudenterConsumer.StudenterReferance.IService1>, WCFStudenterConsumer.StudenterReferance.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Addstudent(int id, string navn, string efternavn, int alder) {
            return base.Channel.Addstudent(id, navn, efternavn, alder);
        }
        
        public System.Threading.Tasks.Task<string> AddstudentAsync(int id, string navn, string efternavn, int alder) {
            return base.Channel.AddstudentAsync(id, navn, efternavn, alder);
        }
        
        public WCFStudenterConsumer.StudenterReferance.Student FindStudent(int ID) {
            return base.Channel.FindStudent(ID);
        }
        
        public System.Threading.Tasks.Task<WCFStudenterConsumer.StudenterReferance.Student> FindStudentAsync(int ID) {
            return base.Channel.FindStudentAsync(ID);
        }
        
        public void RemoveStudent(int id) {
            base.Channel.RemoveStudent(id);
        }
        
        public System.Threading.Tasks.Task RemoveStudentAsync(int id) {
            return base.Channel.RemoveStudentAsync(id);
        }
        
        public string EditStudent(int id, string navn, string efternavn, int alder) {
            return base.Channel.EditStudent(id, navn, efternavn, alder);
        }
        
        public System.Threading.Tasks.Task<string> EditStudentAsync(int id, string navn, string efternavn, int alder) {
            return base.Channel.EditStudentAsync(id, navn, efternavn, alder);
        }
        
        public WCFStudenterConsumer.StudenterReferance.Student[] GetAllStudent() {
            return base.Channel.GetAllStudent();
        }
        
        public System.Threading.Tasks.Task<WCFStudenterConsumer.StudenterReferance.Student[]> GetAllStudentAsync() {
            return base.Channel.GetAllStudentAsync();
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public WCFStudenterConsumer.StudenterReferance.CompositeType GetDataUsingDataContract(WCFStudenterConsumer.StudenterReferance.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<WCFStudenterConsumer.StudenterReferance.CompositeType> GetDataUsingDataContractAsync(WCFStudenterConsumer.StudenterReferance.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
    }
}
